version: '3'

services:
  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB}
    env_file:
      - .env
    networks:
      - db-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./entrypoint.sh:/docker-entrypoint.sh  
    user: "${UID}:${GID}" 
    entrypoint: /docker-entrypoint.sh
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER_NAME}", "-d", "${DB}", "-h", "localhost", "-p", "5432"]

  libraries:
    image: libraries
    container_name: ms_libraries
    command: npm run start:prod
    ports:
      - "8000:8000"
    depends_on:
      - db
      - prometheus
    links:
      - db
    environment:
      NODE_ENV: dev
      PORT: 8000
      DB: "libraries"
      DB_PORT: 5432
      DB_PASSWORD: "postgres"
      DB_USER_NAME: "postgres"
      SECRET_KEY: "AjdK9iNwdPJRwmsGpt7tyGKBygRofWkW"
      DB_HOST: "db"
    networks:
      - db-network
      - libraries-network
    volumes:
      - libraries:/app
    restart: always

  prometheus:
    image: prom/prometheus:v2.34.0 
    volumes:
      - ./prometheus/:/etc/prometheus/
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9000:9000"
    networks:
      - grafana
      - libraries-network

  promtail:
    image: grafana/promtail:2.0.0
    volumes:
      - libraries:/var/log
    networks:
      - grafana

  loki:
    image: grafana/loki:2.4.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - grafana

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    user: '0'
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: always
    networks:
      - grafana
    
volumes:
  postgres-data:
  libraries:
  grafana_data: 

networks:
  libraries-network:
    driver: bridge
  db-network:
    driver: bridge
  grafana:
    driver: bridge
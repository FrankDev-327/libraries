version: '3'

services:
  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB}
    env_file:
      - .env
    networks:
      - db-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./entrypoint.sh:/docker-entrypoint.sh  
    user: "${UID}:${GID}" 
    entrypoint: /docker-entrypoint.sh
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER_NAME}", "-d", "${DB}", "-h", "localhost", "-p", "5432"]

  libraries:
    image: libraries
    container_name: ms_libraries
    command: npm run start:prod
    ports:
      - "8000:8000"
    depends_on:
      - db
    links:
      - db
    environment:
      NODE_ENV: dev
      PORT: 8000
      DB: "libraries"
      DB_PORT: 5432
      DB_PASSWORD: "postgres"
      DB_USER_NAME: "postgres"
      DB_HOST: "db"
      DB_URL: "postgres://${DB_USER_NAME}:${DB_PASSWORD}@db:${DB_PORT}/${DB}"
    networks:
      - db-network
      - libraries-network
    volumes:
      - libraries:/app
    restart: always

volumes:
  postgres-data:
  libraries:

networks:
  libraries-network:
    driver: bridge
  db-network:
    driver: bridge